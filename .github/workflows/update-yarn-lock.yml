name: Update yarn.lock
on:
  schedule:
    # Tuesdays at 15:00 UTC
    - cron: '0 15 * * 2'
  # allow the workflow to be triggered manually
  workflow_dispatch:
jobs:
  update-yarn-lock:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout branch
        uses: actions/checkout@c85c95e3d7251135ab7dc9ce3241c5835cc595a9 # v3.5.3
      - name: Setup Node
        uses: actions/setup-node@v3
        with:
          node-version: 18
      - name: Update dependencies
        # Yarn cannot modify the lockfile on CI by default, so we'll disable
        # that check before installing
        # https://github.com/renovatebot/renovate/discussions/9481?sort=old#discussioncomment-798627
        run: |
          rm yarn.lock
          YARN_ENABLE_IMMUTABLE_INSTALLS=false yarn install
      - name: Commit changes
        run: |
          git config user.name github-actions[bot]
          git config user.email github-actions[bot]@users.noreply.github.com
          git checkout -b github-actions/regenerate-yarn-lock
          git add .
          git commit -m "Regenerate yarn.lock"
          git push origin github-actions/regenerate-yarn-lock --force
      - name: Create pull request
        uses: actions/github-script@v6
        with:
          script: |
            const { repo, owner } = context.repo;
            core.info(JSON.stringify(context))
            try {
              const result = await github.rest.pulls.create({
                title: 'Regenerate yarn.lock',
                owner,
                repo,
                head: 'github-actions/regenerate-yarn-lock',
                base: 'main',
                body: [
                  'This is an update to our indirect dependencies. If the build passes, it should be good to merge.',
                  '',
                  'Happy coding!',
                ].join('\n')
              });
              github.rest.issues.addLabels({
                owner,
                repo,
                issue_number: result.data.number,
                labels: ['Dependencies']
              });
              core.info(`Opened pull request ${result.data.html_url}`)
            } catch (e) {
              if (e.message.includes("pull request already exists")) {
                // The PR might already exist so we'll ignore this error
                core.info('Force pushed to an existing open pull request');
                return;
              }
              // Report any other error as a failure
              throw e;
            }
